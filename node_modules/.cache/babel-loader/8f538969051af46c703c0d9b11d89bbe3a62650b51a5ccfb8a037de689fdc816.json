{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactHook\\\\resources\\\\src\\\\component\\\\search\\\\Search.jsx\";\nimport React, { useState } from \"react\";\nimport { products } from \"../../data\";\nimport \"./search.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  const itemList = [\"Apple\", \"Orange\", \"Banana\", \"Cherry\", \"Milk\", \"Peanuts\", \"Butter\", \"Tomato\"];\n  const [filteredList, setFilteredList] = new useState(products);\n  const filterBySearch = event => {\n    // Access input value\n    const query = event.target.value;\n    // Create copy of item list\n    var updatedList = [...itemList];\n    // Include all elements which includes the search query\n    updatedList = updatedList.filter(item => {\n      return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n    });\n    // Trigger render with updated values\n    setFilteredList(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-text\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-box\",\n        onChange: filterBySearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"item-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: filteredList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","products","jsxDEV","_jsxDEV","Search","itemList","filteredList","setFilteredList","filterBySearch","event","query","target","value","updatedList","filter","item","toLowerCase","indexOf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","index","_c","$RefreshReg$"],"sources":["E:/ReactHook/resources/src/component/search/Search.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { products } from \"../../data\";\r\nimport \"./search.css\";\r\n\r\nconst Search = () => {\r\n     const itemList = [\r\n       \"Apple\",\r\n       \"Orange\",\r\n       \"Banana\",\r\n       \"Cherry\",\r\n       \"Milk\",\r\n       \"Peanuts\",\r\n       \"Butter\",\r\n       \"Tomato\",\r\n     ];\r\n\r\n      const [filteredList, setFilteredList] = new useState(products);\r\n\r\n      const filterBySearch = (event) => {\r\n        // Access input value\r\n        const query = event.target.value;\r\n        // Create copy of item list\r\n        var updatedList = [...itemList];\r\n        // Include all elements which includes the search query\r\n        updatedList = updatedList.filter((item) => {\r\n          return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n        });\r\n        // Trigger render with updated values\r\n        setFilteredList(updatedList);\r\n      };\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"search-header\">\r\n        <div className=\"search-text\">Search:</div>\r\n        <input id=\"search-box\" onChange={filterBySearch} />\r\n      </div>\r\n      <div id=\"item-list\">\r\n        <ol>\r\n          {filteredList.map((item, index) => (\r\n            <li key={index}>{item}</li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAChB,MAAMC,QAAQ,GAAG,CACf,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,SAAS,EACT,QAAQ,EACR,QAAQ,CACT;EAEA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG,IAAIP,QAAQ,CAACC,QAAQ,CAAC;EAE9D,MAAMO,cAAc,GAAIC,KAAK,IAAK;IAChC;IACA,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAChC;IACA,IAAIC,WAAW,GAAG,CAAC,GAAGR,QAAQ,CAAC;IAC/B;IACAQ,WAAW,GAAGA,WAAW,CAACC,MAAM,CAAEC,IAAI,IAAK;MACzC,OAAOA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAACP,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC,CAAC;IACF;IACAT,eAAe,CAACM,WAAW,CAAC;EAC9B,CAAC;EACL,oBACEV,OAAA;IAAKe,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBhB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BhB,OAAA;QAAKe,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1CpB,OAAA;QAAOqB,EAAE,EAAC,YAAY;QAACC,QAAQ,EAAEjB;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACNpB,OAAA;MAAKqB,EAAE,EAAC,WAAW;MAAAL,QAAA,eACjBhB,OAAA;QAAAgB,QAAA,EACGb,YAAY,CAACoB,GAAG,CAAC,CAACX,IAAI,EAAEY,KAAK,kBAC5BxB,OAAA;UAAAgB,QAAA,EAAiBJ;QAAI,GAAZY,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAzCIxB,MAAM;AA2CZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}